git
	version control software
	keeps track of the history of files
	like dropbox but with more advanced features
Repository=project, a place to keeps all files
Commit=save
branch=branching off experimentally
fork=taking a replica of the repo and putting it on your computer/your own Github page
	all commits to master will save to the replica
	still good to make separate branches even in the fork?
pull request= "please take my changes"
issues=a place to leave a comment about a project
Terminal is very similar to the finder 
Intro to the Command Line
	Terminal Commands:
		-help
		-clear
		-open . = open finder
		-cd = change directory > drag over the folder(forked/clone? from Github)>enter>pwd to confirm
		-pwd = print working directory
		-ls = list the contents of the current working directory
		-tab =  auto fill in
		-up/down arrow = browse pervious commands
		-git push and pull =  push your changes and pull other peoples changes to your terminal to wrk locally
		-remote = 
		- git init = initialize a new git repositry 
		git commit -a = skips staging area and commits all files 
		- git add
	
